# https://rust-lang.github.io/rust-clippy/master/
# https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html

deny = [
  "unsafe_code",
]

warn = [
  # "let_underscore_drop", false positives I think
  "macro_use_extern_crate",
  # "missing_docs", so many warnings...
  "non-ascii-idents",
  "noop_method_call",
  "unreachable_pub",
  "unused_crate_dependencies",
  "unused_import_braces",
  "unused-lifetimes",
  "unused_macro_rules",
  "unused_qualifications",
  # "unused_results", so many warnings...
  "unused_tuple_struct_fields",
  # "variant_size_differences",
  # "clippy::allow_attributes_without_reason", Not available yet
  # "clippy::assertions_on_result_states", Debatable: better error messages, worst code readability
  "clippy::bool_to_int_with_if",
  "clippy::branches_sharing_code",
  "clippy::case_sensitive_file_extension_comparisons",
  # "clippy::cast_possible_truncation", probably not something we want to activate
  # "clippy::cast_possible_wrap", probably not something we want to activate
  # "clippy::cast_precision_loss", probably not something we want to activate
  # "clippy::cast_sign_loss", probably not something we want to activate
  "clippy::checked_conversions",
  # "clippy::clone_on_ref_ptr", Debatable
  "clippy::cloned_instead_of_copied",
  # "clippy::cognitive_complexity",
  "clippy::copy_iterator",
  "clippy::create_dir",
  "clippy::dbg_macro",
  "clippy::debug_assert_with_mut_call",
  # "clippy::default_trait_access", Debatable
  # "clippy::deref_by_slicing", Debatable
  "clippy::derive_partial_eq_without_eq",
  "clippy::doc_link_with_quotes",
  "clippy::doc_markdown",
  "clippy::empty_drop",
  "clippy::empty_line_after_outer_attr",
  # "clippy::empty_structs_with_brackets", Cannot be fixed at the moment (issue with serde I thinh)
  "clippy::enum_glob_use",
  "clippy::equatable_if_let",
  "clippy::exit",
  "clippy::expect_used",
  "clippy::expl_impl_clone_on_copy",
  "clippy::explicit_deref_methods",
  "clippy::explicit_into_iter_loop",
  "clippy::explicit_iter_loop",
  "clippy::fallible_impl_from",
  "clippy::filetype_is_file",
  "clippy::filter_map_next",
  "clippy::flat_map_option",
  "clippy::float_cmp",
  "clippy::float_cmp_const",
  "clippy::fn_params_excessive_bools",
  "clippy::fn_to_numeric_cast_any",
  "clippy::from_iter_instead_of_collect",
  # "clippy::if_then_some_else_none", Debatable
  "clippy::implicit_clone",
  # "clippy::inconsistent_struct_constructor", Debatable
  # "clippy::index_refutable_slice", Debatable
  # "clippy::indexing_slicing", Debatabled
  "clippy::inefficient_to_string",
  # "clippy::integer_division", Debatable
  "clippy::invalid_upcast_comparisons",
  "clippy::items_after_statements",
  "clippy::iter_not_returning_iterator",
  "clippy::iter_on_empty_collections",
  "clippy::iter_on_single_items",
  "clippy::iter_with_drain",
  "clippy::large_digit_groups",
  "clippy::large_include_file",
  "clippy::large_stack_arrays",
  "clippy::large_types_passed_by_value",
  # "clippy::let_underscore_must_use", Debatable
  "clippy::linkedlist",
  "clippy::lossy_float_literal",
  "clippy::macro_use_imports",
  "clippy::manual_assert",
  "clippy::manual_clamp",
  "clippy::manual_instant_elapsed",
  "clippy::manual_let_else",
  "clippy::manual_ok_or",
  # "clippy::manual_string_new", Debatable
  "clippy::many_single_char_names",
  # "clippy::map_err_ignore", Debatable
  # "clippy::map_unwrap_or", Debatable
  "clippy::match_bool",
  "clippy::match_on_vec_items",
  "clippy::match_wild_err_arm",
  "clippy::match_wildcard_for_single_variants",
  "clippy::maybe_infinite_iter",
  "clippy::mem_forget",
  "clippy::mismatching_type_param_order",
  # "clippy::missing_const_for_fn", Triggers many warnings
  # "clippy::missing_docs_in_private_items", How masochist do you feel today?
  # "clippy::missing_enforced_import_renames", Might be useful at some point
  # "clippy::missing_errors_doc", Triggers many warnings
  # "clippy::missing_panics_doc", Triggers many warnings
  "clippy::mixed_read_write_in_expression",
  # "clippy::multiple_crate_versions", In an ideal world we could use it...
  # "clippy::multiple_inherent_impl", Very debatable
  "clippy::mut_mut",
  "clippy::mutex_atomic", # may lead to false positives
  "clippy::mutex_integer", # may lead to false positives
  "clippy::needless_bitwise_bool",
  "clippy::needless_collect",
  "clippy::needless_continue",
  "clippy::needless_for_each",
  "clippy::needless_pass_by_value",
  "clippy::negative_feature_names",
  "clippy::no_effect_underscore_binding",
  "clippy::nonstandard_macro_braces",
  # "clippy::option_if_let_else", Debatable
  # "clippy::option_option", May conflict with the way we want to handle http patch
  "clippy::or_fun_call",
  # "clippy::panic", triggered by sqlx macro
  # "clippy::panic_in_result_fn", probable false positives
  "clippy::path_buf_push_overwrite",
  "clippy::print_stderr",
  "clippy::print_stdout",
  "clippy::range_minus_one",
  "clippy::range_plus_one",
  "clippy::rc_buffer",
  "clippy::rc_mutex",
  # "clippy::redundant_closure_for_method_calls", Debatable
  # "clippy::redundant_else", Debatable
  "clippy::redundant_feature_names",
  "clippy::ref_binding_to_reference",
  # "clippy::ref_option_ref", issue in api_v2_errors
  "clippy::rest_pat_in_fully_bound_structs",
  "clippy::same_functions_in_if_condition",
  "clippy::same_name_method",
  # "clippy::self_named_module_files", Does not seem to work as expected
  # "clippy::semicolon_if_nothing_returned", Debatable
  "clippy::significant_drop_in_scrutinee",
  # "clippy::str_to_string", Debatable
  # "clippy::string_slice", tricky one but may be useful
  # "clippy::string_to_string", Issue in Apiv2Schema macro
  # "clippy::suboptimal_flops", Make operations harder to understand (using mul_add...)
  "clippy::suspicious_operation_groupings",
  "clippy::suspicious_xor_used_as_pow",
  "clippy::todo",
  # "clippy::too_many_lines", Not sure how useful it actually is
  "clippy::trailing_empty_array",
  "clippy::trait_duplication_in_bounds",
  # "clippy::trivially_copy_pass_by_ref",
  "clippy::try_err",
  "clippy::type_repetition_in_bounds",
  "clippy::unchecked_duration_subtraction",
  "clippy::unicode_not_nfc",
  "clippy::unimplemented",
  "clippy::unnecessary_safety_comment",
  "clippy::unnecessary_safety_doc",
  "clippy::unnecessary_wraps",
  "clippy::unnested_or_patterns",
  # "clippy::unreachable", Dabatable
  "clippy::unreadable_literal",
  "clippy::unsafe_derive_deserialize",
  # "clippy::unused_async",
  "clippy::unused_peekable",
  "clippy::unused_rounding",
  "clippy::unused_self",
  "clippy::unwrap_in_result",
  "clippy::unwrap_used",
  # "clippy::use_self", Debatable
  # "clippy::used_underscore_binding", does not work properly with macro
  "clippy::useless_let_if_seq",
  "clippy::verbose_file_reads",
  "clippy::wildcard_dependencies",
  # "clippy::wildcard_enum_match_arm", Debatable
  "clippy::wildcard_imports",
  "clippy::zero_sized_map_values",
  # "clippy::impl_trait_in_params",
  # "clippy::significant_drop_tightening",
]

allow = [
# "clippy::enum_variant_names"
]
